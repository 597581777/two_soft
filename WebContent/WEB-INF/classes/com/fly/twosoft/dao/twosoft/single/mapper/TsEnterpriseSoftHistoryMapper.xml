<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fly.twosoft.dao.twosoft.single.mapper.TsEnterpriseSoftHistoryMapper" >
  <resultMap id="BaseResultMap" type="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseSoftHistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="HISTORY_ID" property="historyId" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="SMALLINT" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="SOFT_FROM" property="softFrom" jdbcType="VARCHAR" />
    <result column="SOFT_NUM" property="softNum" jdbcType="INTEGER" />
    <result column="BUY_RENT" property="buyRent" jdbcType="VARCHAR" />
    <result column="FLY_INDEX" property="flyIndex" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, HISTORY_ID, TYPE, NAME, SOFT_FROM, SOFT_NUM, BUY_RENT, FLY_INDEX
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseSoftHistoryExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TS_ENTERPRISE_SOFT_HISTORY
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="mysqlSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from TS_ENTERPRISE_SOFT_HISTORY
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from TS_ENTERPRISE_SOFT_HISTORY
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseSoftHistoryExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from TS_ENTERPRISE_SOFT_HISTORY
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseSoftHistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into TS_ENTERPRISE_SOFT_HISTORY (ID, HISTORY_ID, TYPE, 
      NAME, SOFT_FROM, SOFT_NUM, 
      BUY_RENT, FLY_INDEX)
    values (#{id,jdbcType=VARCHAR}, #{historyId,jdbcType=VARCHAR}, #{type,jdbcType=SMALLINT}, 
      #{name,jdbcType=VARCHAR}, #{softFrom,jdbcType=VARCHAR}, #{softNum,jdbcType=INTEGER}, 
      #{buyRent,jdbcType=VARCHAR}, #{flyIndex,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseSoftHistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into TS_ENTERPRISE_SOFT_HISTORY
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="historyId != null" >
        HISTORY_ID,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="softFrom != null" >
        SOFT_FROM,
      </if>
      <if test="softNum != null" >
        SOFT_NUM,
      </if>
      <if test="buyRent != null" >
        BUY_RENT,
      </if>
      <if test="flyIndex != null" >
        FLY_INDEX,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="historyId != null" >
        #{historyId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=SMALLINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="softFrom != null" >
        #{softFrom,jdbcType=VARCHAR},
      </if>
      <if test="softNum != null" >
        #{softNum,jdbcType=INTEGER},
      </if>
      <if test="buyRent != null" >
        #{buyRent,jdbcType=VARCHAR},
      </if>
      <if test="flyIndex != null" >
        #{flyIndex,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseSoftHistoryExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from TS_ENTERPRISE_SOFT_HISTORY
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TS_ENTERPRISE_SOFT_HISTORY
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.historyId != null" >
        HISTORY_ID = #{record.historyId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        TYPE = #{record.type,jdbcType=SMALLINT},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.softFrom != null" >
        SOFT_FROM = #{record.softFrom,jdbcType=VARCHAR},
      </if>
      <if test="record.softNum != null" >
        SOFT_NUM = #{record.softNum,jdbcType=INTEGER},
      </if>
      <if test="record.buyRent != null" >
        BUY_RENT = #{record.buyRent,jdbcType=VARCHAR},
      </if>
      <if test="record.flyIndex != null" >
        FLY_INDEX = #{record.flyIndex,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TS_ENTERPRISE_SOFT_HISTORY
    set ID = #{record.id,jdbcType=VARCHAR},
      HISTORY_ID = #{record.historyId,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=SMALLINT},
      NAME = #{record.name,jdbcType=VARCHAR},
      SOFT_FROM = #{record.softFrom,jdbcType=VARCHAR},
      SOFT_NUM = #{record.softNum,jdbcType=INTEGER},
      BUY_RENT = #{record.buyRent,jdbcType=VARCHAR},
      FLY_INDEX = #{record.flyIndex,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseSoftHistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TS_ENTERPRISE_SOFT_HISTORY
    <set >
      <if test="historyId != null" >
        HISTORY_ID = #{historyId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        TYPE = #{type,jdbcType=SMALLINT},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="softFrom != null" >
        SOFT_FROM = #{softFrom,jdbcType=VARCHAR},
      </if>
      <if test="softNum != null" >
        SOFT_NUM = #{softNum,jdbcType=INTEGER},
      </if>
      <if test="buyRent != null" >
        BUY_RENT = #{buyRent,jdbcType=VARCHAR},
      </if>
      <if test="flyIndex != null" >
        FLY_INDEX = #{flyIndex,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseSoftHistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TS_ENTERPRISE_SOFT_HISTORY
    set HISTORY_ID = #{historyId,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=SMALLINT},
      NAME = #{name,jdbcType=VARCHAR},
      SOFT_FROM = #{softFrom,jdbcType=VARCHAR},
      SOFT_NUM = #{softNum,jdbcType=INTEGER},
      BUY_RENT = #{buyRent,jdbcType=VARCHAR},
      FLY_INDEX = #{flyIndex,jdbcType=INTEGER}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="mysqlSuffix" >
    <if test=" pageParam != null and pageParam.recordStart >= 0 and pageParam.pageSize > 0" >
      <![CDATA[ limit #{pageParam.recordStart},#{pageParam.pageSize} ]]>
    </if>
  </sql>
  <sql id="customVar_enterpriseSoftHistory" >
    ai
  </sql>
  <sql id="customMysqlSuffix_enterpriseSoftHistory" >
    <if test="enterpriseSoftHistory != null and enterpriseSoftHistory.pageParam != null and enterpriseSoftHistory.pageParam.recordStart >= 0 and enterpriseSoftHistory.pageParam.pageSize > 0" >
      <![CDATA[ limit #{enterpriseSoftHistory.pageParam.recordStart},#{enterpriseSoftHistory.pageParam.pageSize} ]]>
    </if>
  </sql>
  <resultMap id="customResultMap_enterpriseSoftHistory" type="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseSoftHistory" >
    <result column="ai_ID" jdbcType="VARCHAR" property="id" />
    <result column="ai_HISTORY_ID" jdbcType="VARCHAR" property="historyId" />
    <result column="ai_TYPE" jdbcType="SMALLINT" property="type" />
    <result column="ai_NAME" jdbcType="VARCHAR" property="name" />
    <result column="ai_SOFT_FROM" jdbcType="VARCHAR" property="softFrom" />
    <result column="ai_SOFT_NUM" jdbcType="INTEGER" property="softNum" />
    <result column="ai_BUY_RENT" jdbcType="VARCHAR" property="buyRent" />
    <result column="ai_FLY_INDEX" jdbcType="INTEGER" property="flyIndex" />
  </resultMap>
  <sql id="customColumns_enterpriseSoftHistory" >
    ai.ID ai_ID, ai.HISTORY_ID ai_HISTORY_ID, ai.TYPE ai_TYPE, ai.NAME ai_NAME, ai.SOFT_FROM ai_SOFT_FROM, ai.SOFT_NUM ai_SOFT_NUM, ai.BUY_RENT ai_BUY_RENT, ai.FLY_INDEX ai_FLY_INDEX
  </sql>
  <sql id="customColumnVars_enterpriseSoftHistory" >
    ai.ID, ai.HISTORY_ID, ai.TYPE, ai.NAME, ai.SOFT_FROM, ai.SOFT_NUM, ai.BUY_RENT, ai.FLY_INDEX
  </sql>
  <sql id="customExampleWhere_enterpriseSoftHistory" >
    <if test="enterpriseSoftHistory != null &amp;&amp; enterpriseSoftHistory.oredCriteria.size() &gt; 0" >
      and
      <trim prefixOverrides="or" >
        <foreach collection="enterpriseSoftHistory.oredCriteria" item="criteria" separator="or" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <choose >
              <when test="criteria.valid" >
                <foreach collection="criteria.criteria" item="criterion" >
                  <choose >
                    <when test="criterion.noValue" >
                      and ai.${criterion.condition}
                    </when>
                    <when test="criterion.singleValue" >
                      and ai.${criterion.condition} #{criterion.value}
                    </when>
                    <when test="criterion.betweenValue" >
                      and ai.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                    </when>
                    <when test="criterion.listValue" >
                      and ai.${criterion.condition}
                      <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                        #{listItem}
                      </foreach>
                    </when>
                  </choose>
                </foreach>
              </when>
              <otherwise >
                and 1 = 1
              </otherwise>
            </choose>
          </trim>
        </foreach>
      </trim>
    </if>
  </sql>
  <sql id="customOrderBy_enterpriseSoftHistory" >
    <if test="enterpriseSoftHistory != null and enterpriseSoftHistory.orderByClause != null" >
      order by ${enterpriseSoftHistory.orderByClause}
    </if>
  </sql>
</mapper>