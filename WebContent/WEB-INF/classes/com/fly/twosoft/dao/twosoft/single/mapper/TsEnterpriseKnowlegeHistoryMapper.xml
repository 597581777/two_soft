<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fly.twosoft.dao.twosoft.single.mapper.TsEnterpriseKnowlegeHistoryMapper" >
  <resultMap id="BaseResultMap" type="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseKnowlegeHistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="HISTORY_ID" property="historyId" jdbcType="VARCHAR" />
    <result column="CONTENT" property="content" jdbcType="VARCHAR" />
    <result column="FLY_INDEX" property="flyIndex" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, HISTORY_ID, CONTENT, FLY_INDEX
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseKnowlegeHistoryExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TS_ENTERPRISE_KNOWLEGE_HISTORY
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="mysqlSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from TS_ENTERPRISE_KNOWLEGE_HISTORY
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from TS_ENTERPRISE_KNOWLEGE_HISTORY
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseKnowlegeHistoryExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from TS_ENTERPRISE_KNOWLEGE_HISTORY
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseKnowlegeHistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into TS_ENTERPRISE_KNOWLEGE_HISTORY (ID, HISTORY_ID, CONTENT, 
      FLY_INDEX)
    values (#{id,jdbcType=VARCHAR}, #{historyId,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{flyIndex,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseKnowlegeHistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into TS_ENTERPRISE_KNOWLEGE_HISTORY
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="historyId != null" >
        HISTORY_ID,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
      <if test="flyIndex != null" >
        FLY_INDEX,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="historyId != null" >
        #{historyId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="flyIndex != null" >
        #{flyIndex,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseKnowlegeHistoryExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from TS_ENTERPRISE_KNOWLEGE_HISTORY
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TS_ENTERPRISE_KNOWLEGE_HISTORY
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.historyId != null" >
        HISTORY_ID = #{record.historyId,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        CONTENT = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.flyIndex != null" >
        FLY_INDEX = #{record.flyIndex,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TS_ENTERPRISE_KNOWLEGE_HISTORY
    set ID = #{record.id,jdbcType=VARCHAR},
      HISTORY_ID = #{record.historyId,jdbcType=VARCHAR},
      CONTENT = #{record.content,jdbcType=VARCHAR},
      FLY_INDEX = #{record.flyIndex,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseKnowlegeHistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TS_ENTERPRISE_KNOWLEGE_HISTORY
    <set >
      <if test="historyId != null" >
        HISTORY_ID = #{historyId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        CONTENT = #{content,jdbcType=VARCHAR},
      </if>
      <if test="flyIndex != null" >
        FLY_INDEX = #{flyIndex,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseKnowlegeHistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TS_ENTERPRISE_KNOWLEGE_HISTORY
    set HISTORY_ID = #{historyId,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=VARCHAR},
      FLY_INDEX = #{flyIndex,jdbcType=INTEGER}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="mysqlSuffix" >
    <if test=" pageParam != null and pageParam.recordStart >= 0 and pageParam.pageSize > 0" >
      <![CDATA[ limit #{pageParam.recordStart},#{pageParam.pageSize} ]]>
    </if>
  </sql>
  <sql id="customVar_enterpriseKnowlegeHistory" >
    ac
  </sql>
  <sql id="customMysqlSuffix_enterpriseKnowlegeHistory" >
    <if test="enterpriseKnowlegeHistory != null and enterpriseKnowlegeHistory.pageParam != null and enterpriseKnowlegeHistory.pageParam.recordStart >= 0 and enterpriseKnowlegeHistory.pageParam.pageSize > 0" >
      <![CDATA[ limit #{enterpriseKnowlegeHistory.pageParam.recordStart},#{enterpriseKnowlegeHistory.pageParam.pageSize} ]]>
    </if>
  </sql>
  <resultMap id="customResultMap_enterpriseKnowlegeHistory" type="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseKnowlegeHistory" >
    <result column="ac_ID" jdbcType="VARCHAR" property="id" />
    <result column="ac_HISTORY_ID" jdbcType="VARCHAR" property="historyId" />
    <result column="ac_CONTENT" jdbcType="VARCHAR" property="content" />
    <result column="ac_FLY_INDEX" jdbcType="INTEGER" property="flyIndex" />
  </resultMap>
  <sql id="customColumns_enterpriseKnowlegeHistory" >
    ac.ID ac_ID, ac.HISTORY_ID ac_HISTORY_ID, ac.CONTENT ac_CONTENT, ac.FLY_INDEX ac_FLY_INDEX
  </sql>
  <sql id="customColumnVars_enterpriseKnowlegeHistory" >
    ac.ID, ac.HISTORY_ID, ac.CONTENT, ac.FLY_INDEX
  </sql>
  <sql id="customExampleWhere_enterpriseKnowlegeHistory" >
    <if test="enterpriseKnowlegeHistory != null &amp;&amp; enterpriseKnowlegeHistory.oredCriteria.size() &gt; 0" >
      and
      <trim prefixOverrides="or" >
        <foreach collection="enterpriseKnowlegeHistory.oredCriteria" item="criteria" separator="or" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <choose >
              <when test="criteria.valid" >
                <foreach collection="criteria.criteria" item="criterion" >
                  <choose >
                    <when test="criterion.noValue" >
                      and ac.${criterion.condition}
                    </when>
                    <when test="criterion.singleValue" >
                      and ac.${criterion.condition} #{criterion.value}
                    </when>
                    <when test="criterion.betweenValue" >
                      and ac.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                    </when>
                    <when test="criterion.listValue" >
                      and ac.${criterion.condition}
                      <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                        #{listItem}
                      </foreach>
                    </when>
                  </choose>
                </foreach>
              </when>
              <otherwise >
                and 1 = 1
              </otherwise>
            </choose>
          </trim>
        </foreach>
      </trim>
    </if>
  </sql>
  <sql id="customOrderBy_enterpriseKnowlegeHistory" >
    <if test="enterpriseKnowlegeHistory != null and enterpriseKnowlegeHistory.orderByClause != null" >
      order by ${enterpriseKnowlegeHistory.orderByClause}
    </if>
  </sql>
</mapper>