package com.fly.twosoft.dao.twosoft.single.model;

import com.fasterxml.jackson.annotation.JsonFormat;
import java.io.Serializable;
import java.util.Date;

public class TsFile implements Serializable {
    public static final String REF_TABLE_ALIAS_file = "m";

    //
    private String id;

    //
    private Short targetType;

    //
    private String targetId;

    //
    private String fileName;

    //
    private String filePath;

    //
    private String filePrefix;

    //
    private String fileSuffix;

    //
    private String createPersonId;

    //
    private String createPersonName;

    //
    @JsonFormat(pattern="yyyy-MM-dd HH:mm:ss", timezone = "GMT+8")
    private Date createTime;

    //
    private String updatePersonId;

    //
    private String updatePersonName;

    //
    @JsonFormat(pattern="yyyy-MM-dd HH:mm:ss", timezone = "GMT+8")
    private Date updateTime;

    //
    private Short deleteState;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TS_FILE
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    //返回
    public String getId() {
        return id;
    }

    //设置
    public void setId(String id) {
        this.id = id == null ? null : id.trim();
    }

    //返回
    public Short getTargetType() {
        return targetType;
    }

    //设置
    public void setTargetType(Short targetType) {
        this.targetType = targetType;
    }

    //返回
    public String getTargetId() {
        return targetId;
    }

    //设置
    public void setTargetId(String targetId) {
        this.targetId = targetId == null ? null : targetId.trim();
    }

    //返回
    public String getFileName() {
        return fileName;
    }

    //设置
    public void setFileName(String fileName) {
        this.fileName = fileName == null ? null : fileName.trim();
    }

    //返回
    public String getFilePath() {
        return filePath;
    }

    //设置
    public void setFilePath(String filePath) {
        this.filePath = filePath == null ? null : filePath.trim();
    }

    //返回
    public String getFilePrefix() {
        return filePrefix;
    }

    //设置
    public void setFilePrefix(String filePrefix) {
        this.filePrefix = filePrefix == null ? null : filePrefix.trim();
    }

    //返回
    public String getFileSuffix() {
        return fileSuffix;
    }

    //设置
    public void setFileSuffix(String fileSuffix) {
        this.fileSuffix = fileSuffix == null ? null : fileSuffix.trim();
    }

    //返回
    public String getCreatePersonId() {
        return createPersonId;
    }

    //设置
    public void setCreatePersonId(String createPersonId) {
        this.createPersonId = createPersonId == null ? null : createPersonId.trim();
    }

    //返回
    public String getCreatePersonName() {
        return createPersonName;
    }

    //设置
    public void setCreatePersonName(String createPersonName) {
        this.createPersonName = createPersonName == null ? null : createPersonName.trim();
    }

    //返回
    public Date getCreateTime() {
        return createTime;
    }

    //设置
    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    //返回
    public String getUpdatePersonId() {
        return updatePersonId;
    }

    //设置
    public void setUpdatePersonId(String updatePersonId) {
        this.updatePersonId = updatePersonId == null ? null : updatePersonId.trim();
    }

    //返回
    public String getUpdatePersonName() {
        return updatePersonName;
    }

    //设置
    public void setUpdatePersonName(String updatePersonName) {
        this.updatePersonName = updatePersonName == null ? null : updatePersonName.trim();
    }

    //返回
    public Date getUpdateTime() {
        return updateTime;
    }

    //设置
    public void setUpdateTime(Date updateTime) {
        this.updateTime = updateTime;
    }

    //返回
    public Short getDeleteState() {
        return deleteState;
    }

    //设置
    public void setDeleteState(Short deleteState) {
        this.deleteState = deleteState;
    }
}