package com.fly.twosoft.dao.twosoft.single.model;

import com.fly.core.dao.PageParam;
import java.util.ArrayList;
import java.util.List;

public class TsEnterpriseSoftExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TS_ENTERPRISE_SOFT
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TS_ENTERPRISE_SOFT
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TS_ENTERPRISE_SOFT
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    protected PageParam pageParam;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_SOFT
     *
     * @mbggenerated
     */
    public TsEnterpriseSoftExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_SOFT
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_SOFT
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_SOFT
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_SOFT
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_SOFT
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_SOFT
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_SOFT
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_SOFT
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_SOFT
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_SOFT
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setPageParam(PageParam pageParam) {
        this.pageParam=pageParam;
    }

    public PageParam getPageParam() {
        return pageParam;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TS_ENTERPRISE_SOFT
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdIsNull() {
            addCriterion("ENTERPRISE_ID is null");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdIsNotNull() {
            addCriterion("ENTERPRISE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdEqualTo(String value) {
            addCriterion("ENTERPRISE_ID =", value, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdNotEqualTo(String value) {
            addCriterion("ENTERPRISE_ID <>", value, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdGreaterThan(String value) {
            addCriterion("ENTERPRISE_ID >", value, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdGreaterThanOrEqualTo(String value) {
            addCriterion("ENTERPRISE_ID >=", value, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdLessThan(String value) {
            addCriterion("ENTERPRISE_ID <", value, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdLessThanOrEqualTo(String value) {
            addCriterion("ENTERPRISE_ID <=", value, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdLike(String value) {
            addCriterion("ENTERPRISE_ID like", value, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdNotLike(String value) {
            addCriterion("ENTERPRISE_ID not like", value, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdIn(List<String> values) {
            addCriterion("ENTERPRISE_ID in", values, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdNotIn(List<String> values) {
            addCriterion("ENTERPRISE_ID not in", values, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdBetween(String value1, String value2) {
            addCriterion("ENTERPRISE_ID between", value1, value2, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdNotBetween(String value1, String value2) {
            addCriterion("ENTERPRISE_ID not between", value1, value2, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("TYPE is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Short value) {
            addCriterion("TYPE =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Short value) {
            addCriterion("TYPE <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Short value) {
            addCriterion("TYPE >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Short value) {
            addCriterion("TYPE >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Short value) {
            addCriterion("TYPE <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Short value) {
            addCriterion("TYPE <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Short> values) {
            addCriterion("TYPE in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Short> values) {
            addCriterion("TYPE not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Short value1, Short value2) {
            addCriterion("TYPE between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Short value1, Short value2) {
            addCriterion("TYPE not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("NAME =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("NAME <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("NAME >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("NAME <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("NAME like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("NAME not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("NAME in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("NAME not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andSoftFromIsNull() {
            addCriterion("SOFT_FROM is null");
            return (Criteria) this;
        }

        public Criteria andSoftFromIsNotNull() {
            addCriterion("SOFT_FROM is not null");
            return (Criteria) this;
        }

        public Criteria andSoftFromEqualTo(String value) {
            addCriterion("SOFT_FROM =", value, "softFrom");
            return (Criteria) this;
        }

        public Criteria andSoftFromNotEqualTo(String value) {
            addCriterion("SOFT_FROM <>", value, "softFrom");
            return (Criteria) this;
        }

        public Criteria andSoftFromGreaterThan(String value) {
            addCriterion("SOFT_FROM >", value, "softFrom");
            return (Criteria) this;
        }

        public Criteria andSoftFromGreaterThanOrEqualTo(String value) {
            addCriterion("SOFT_FROM >=", value, "softFrom");
            return (Criteria) this;
        }

        public Criteria andSoftFromLessThan(String value) {
            addCriterion("SOFT_FROM <", value, "softFrom");
            return (Criteria) this;
        }

        public Criteria andSoftFromLessThanOrEqualTo(String value) {
            addCriterion("SOFT_FROM <=", value, "softFrom");
            return (Criteria) this;
        }

        public Criteria andSoftFromLike(String value) {
            addCriterion("SOFT_FROM like", value, "softFrom");
            return (Criteria) this;
        }

        public Criteria andSoftFromNotLike(String value) {
            addCriterion("SOFT_FROM not like", value, "softFrom");
            return (Criteria) this;
        }

        public Criteria andSoftFromIn(List<String> values) {
            addCriterion("SOFT_FROM in", values, "softFrom");
            return (Criteria) this;
        }

        public Criteria andSoftFromNotIn(List<String> values) {
            addCriterion("SOFT_FROM not in", values, "softFrom");
            return (Criteria) this;
        }

        public Criteria andSoftFromBetween(String value1, String value2) {
            addCriterion("SOFT_FROM between", value1, value2, "softFrom");
            return (Criteria) this;
        }

        public Criteria andSoftFromNotBetween(String value1, String value2) {
            addCriterion("SOFT_FROM not between", value1, value2, "softFrom");
            return (Criteria) this;
        }

        public Criteria andSoftNumIsNull() {
            addCriterion("SOFT_NUM is null");
            return (Criteria) this;
        }

        public Criteria andSoftNumIsNotNull() {
            addCriterion("SOFT_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andSoftNumEqualTo(Integer value) {
            addCriterion("SOFT_NUM =", value, "softNum");
            return (Criteria) this;
        }

        public Criteria andSoftNumNotEqualTo(Integer value) {
            addCriterion("SOFT_NUM <>", value, "softNum");
            return (Criteria) this;
        }

        public Criteria andSoftNumGreaterThan(Integer value) {
            addCriterion("SOFT_NUM >", value, "softNum");
            return (Criteria) this;
        }

        public Criteria andSoftNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("SOFT_NUM >=", value, "softNum");
            return (Criteria) this;
        }

        public Criteria andSoftNumLessThan(Integer value) {
            addCriterion("SOFT_NUM <", value, "softNum");
            return (Criteria) this;
        }

        public Criteria andSoftNumLessThanOrEqualTo(Integer value) {
            addCriterion("SOFT_NUM <=", value, "softNum");
            return (Criteria) this;
        }

        public Criteria andSoftNumIn(List<Integer> values) {
            addCriterion("SOFT_NUM in", values, "softNum");
            return (Criteria) this;
        }

        public Criteria andSoftNumNotIn(List<Integer> values) {
            addCriterion("SOFT_NUM not in", values, "softNum");
            return (Criteria) this;
        }

        public Criteria andSoftNumBetween(Integer value1, Integer value2) {
            addCriterion("SOFT_NUM between", value1, value2, "softNum");
            return (Criteria) this;
        }

        public Criteria andSoftNumNotBetween(Integer value1, Integer value2) {
            addCriterion("SOFT_NUM not between", value1, value2, "softNum");
            return (Criteria) this;
        }

        public Criteria andBuyRentIsNull() {
            addCriterion("BUY_RENT is null");
            return (Criteria) this;
        }

        public Criteria andBuyRentIsNotNull() {
            addCriterion("BUY_RENT is not null");
            return (Criteria) this;
        }

        public Criteria andBuyRentEqualTo(String value) {
            addCriterion("BUY_RENT =", value, "buyRent");
            return (Criteria) this;
        }

        public Criteria andBuyRentNotEqualTo(String value) {
            addCriterion("BUY_RENT <>", value, "buyRent");
            return (Criteria) this;
        }

        public Criteria andBuyRentGreaterThan(String value) {
            addCriterion("BUY_RENT >", value, "buyRent");
            return (Criteria) this;
        }

        public Criteria andBuyRentGreaterThanOrEqualTo(String value) {
            addCriterion("BUY_RENT >=", value, "buyRent");
            return (Criteria) this;
        }

        public Criteria andBuyRentLessThan(String value) {
            addCriterion("BUY_RENT <", value, "buyRent");
            return (Criteria) this;
        }

        public Criteria andBuyRentLessThanOrEqualTo(String value) {
            addCriterion("BUY_RENT <=", value, "buyRent");
            return (Criteria) this;
        }

        public Criteria andBuyRentLike(String value) {
            addCriterion("BUY_RENT like", value, "buyRent");
            return (Criteria) this;
        }

        public Criteria andBuyRentNotLike(String value) {
            addCriterion("BUY_RENT not like", value, "buyRent");
            return (Criteria) this;
        }

        public Criteria andBuyRentIn(List<String> values) {
            addCriterion("BUY_RENT in", values, "buyRent");
            return (Criteria) this;
        }

        public Criteria andBuyRentNotIn(List<String> values) {
            addCriterion("BUY_RENT not in", values, "buyRent");
            return (Criteria) this;
        }

        public Criteria andBuyRentBetween(String value1, String value2) {
            addCriterion("BUY_RENT between", value1, value2, "buyRent");
            return (Criteria) this;
        }

        public Criteria andBuyRentNotBetween(String value1, String value2) {
            addCriterion("BUY_RENT not between", value1, value2, "buyRent");
            return (Criteria) this;
        }

        public Criteria andFlyIndexIsNull() {
            addCriterion("FLY_INDEX is null");
            return (Criteria) this;
        }

        public Criteria andFlyIndexIsNotNull() {
            addCriterion("FLY_INDEX is not null");
            return (Criteria) this;
        }

        public Criteria andFlyIndexEqualTo(Integer value) {
            addCriterion("FLY_INDEX =", value, "flyIndex");
            return (Criteria) this;
        }

        public Criteria andFlyIndexNotEqualTo(Integer value) {
            addCriterion("FLY_INDEX <>", value, "flyIndex");
            return (Criteria) this;
        }

        public Criteria andFlyIndexGreaterThan(Integer value) {
            addCriterion("FLY_INDEX >", value, "flyIndex");
            return (Criteria) this;
        }

        public Criteria andFlyIndexGreaterThanOrEqualTo(Integer value) {
            addCriterion("FLY_INDEX >=", value, "flyIndex");
            return (Criteria) this;
        }

        public Criteria andFlyIndexLessThan(Integer value) {
            addCriterion("FLY_INDEX <", value, "flyIndex");
            return (Criteria) this;
        }

        public Criteria andFlyIndexLessThanOrEqualTo(Integer value) {
            addCriterion("FLY_INDEX <=", value, "flyIndex");
            return (Criteria) this;
        }

        public Criteria andFlyIndexIn(List<Integer> values) {
            addCriterion("FLY_INDEX in", values, "flyIndex");
            return (Criteria) this;
        }

        public Criteria andFlyIndexNotIn(List<Integer> values) {
            addCriterion("FLY_INDEX not in", values, "flyIndex");
            return (Criteria) this;
        }

        public Criteria andFlyIndexBetween(Integer value1, Integer value2) {
            addCriterion("FLY_INDEX between", value1, value2, "flyIndex");
            return (Criteria) this;
        }

        public Criteria andFlyIndexNotBetween(Integer value1, Integer value2) {
            addCriterion("FLY_INDEX not between", value1, value2, "flyIndex");
            return (Criteria) this;
        }

        public Criteria andIdLikeInsensitive(String value) {
            addCriterion("upper(ID) like", value.toUpperCase(), "id");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdLikeInsensitive(String value) {
            addCriterion("upper(ENTERPRISE_ID) like", value.toUpperCase(), "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andNameLikeInsensitive(String value) {
            addCriterion("upper(NAME) like", value.toUpperCase(), "name");
            return (Criteria) this;
        }

        public Criteria andSoftFromLikeInsensitive(String value) {
            addCriterion("upper(SOFT_FROM) like", value.toUpperCase(), "softFrom");
            return (Criteria) this;
        }

        public Criteria andBuyRentLikeInsensitive(String value) {
            addCriterion("upper(BUY_RENT) like", value.toUpperCase(), "buyRent");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TS_ENTERPRISE_SOFT
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TS_ENTERPRISE_SOFT
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}