package com.fly.twosoft.dao.twosoft.single.model;

import com.fly.core.dao.PageParam;
import java.util.ArrayList;
import java.util.List;

public class TsEnterpriseBusinessExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TS_ENTERPRISE_BUSINESS
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TS_ENTERPRISE_BUSINESS
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TS_ENTERPRISE_BUSINESS
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    protected PageParam pageParam;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_BUSINESS
     *
     * @mbggenerated
     */
    public TsEnterpriseBusinessExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_BUSINESS
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_BUSINESS
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_BUSINESS
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_BUSINESS
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_BUSINESS
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_BUSINESS
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_BUSINESS
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_BUSINESS
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_BUSINESS
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TS_ENTERPRISE_BUSINESS
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setPageParam(PageParam pageParam) {
        this.pageParam=pageParam;
    }

    public PageParam getPageParam() {
        return pageParam;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TS_ENTERPRISE_BUSINESS
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdIsNull() {
            addCriterion("ENTERPRISE_ID is null");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdIsNotNull() {
            addCriterion("ENTERPRISE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdEqualTo(String value) {
            addCriterion("ENTERPRISE_ID =", value, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdNotEqualTo(String value) {
            addCriterion("ENTERPRISE_ID <>", value, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdGreaterThan(String value) {
            addCriterion("ENTERPRISE_ID >", value, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdGreaterThanOrEqualTo(String value) {
            addCriterion("ENTERPRISE_ID >=", value, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdLessThan(String value) {
            addCriterion("ENTERPRISE_ID <", value, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdLessThanOrEqualTo(String value) {
            addCriterion("ENTERPRISE_ID <=", value, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdLike(String value) {
            addCriterion("ENTERPRISE_ID like", value, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdNotLike(String value) {
            addCriterion("ENTERPRISE_ID not like", value, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdIn(List<String> values) {
            addCriterion("ENTERPRISE_ID in", values, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdNotIn(List<String> values) {
            addCriterion("ENTERPRISE_ID not in", values, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdBetween(String value1, String value2) {
            addCriterion("ENTERPRISE_ID between", value1, value2, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdNotBetween(String value1, String value2) {
            addCriterion("ENTERPRISE_ID not between", value1, value2, "enterpriseId");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("TYPE is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Short value) {
            addCriterion("TYPE =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Short value) {
            addCriterion("TYPE <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Short value) {
            addCriterion("TYPE >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Short value) {
            addCriterion("TYPE >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Short value) {
            addCriterion("TYPE <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Short value) {
            addCriterion("TYPE <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Short> values) {
            addCriterion("TYPE in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Short> values) {
            addCriterion("TYPE not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Short value1, Short value2) {
            addCriterion("TYPE between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Short value1, Short value2) {
            addCriterion("TYPE not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andMoneyIsNull() {
            addCriterion("MONEY is null");
            return (Criteria) this;
        }

        public Criteria andMoneyIsNotNull() {
            addCriterion("MONEY is not null");
            return (Criteria) this;
        }

        public Criteria andMoneyEqualTo(Double value) {
            addCriterion("MONEY =", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyNotEqualTo(Double value) {
            addCriterion("MONEY <>", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyGreaterThan(Double value) {
            addCriterion("MONEY >", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyGreaterThanOrEqualTo(Double value) {
            addCriterion("MONEY >=", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyLessThan(Double value) {
            addCriterion("MONEY <", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyLessThanOrEqualTo(Double value) {
            addCriterion("MONEY <=", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyIn(List<Double> values) {
            addCriterion("MONEY in", values, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyNotIn(List<Double> values) {
            addCriterion("MONEY not in", values, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyBetween(Double value1, Double value2) {
            addCriterion("MONEY between", value1, value2, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyNotBetween(Double value1, Double value2) {
            addCriterion("MONEY not between", value1, value2, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyPercentIsNull() {
            addCriterion("MONEY_PERCENT is null");
            return (Criteria) this;
        }

        public Criteria andMoneyPercentIsNotNull() {
            addCriterion("MONEY_PERCENT is not null");
            return (Criteria) this;
        }

        public Criteria andMoneyPercentEqualTo(Double value) {
            addCriterion("MONEY_PERCENT =", value, "moneyPercent");
            return (Criteria) this;
        }

        public Criteria andMoneyPercentNotEqualTo(Double value) {
            addCriterion("MONEY_PERCENT <>", value, "moneyPercent");
            return (Criteria) this;
        }

        public Criteria andMoneyPercentGreaterThan(Double value) {
            addCriterion("MONEY_PERCENT >", value, "moneyPercent");
            return (Criteria) this;
        }

        public Criteria andMoneyPercentGreaterThanOrEqualTo(Double value) {
            addCriterion("MONEY_PERCENT >=", value, "moneyPercent");
            return (Criteria) this;
        }

        public Criteria andMoneyPercentLessThan(Double value) {
            addCriterion("MONEY_PERCENT <", value, "moneyPercent");
            return (Criteria) this;
        }

        public Criteria andMoneyPercentLessThanOrEqualTo(Double value) {
            addCriterion("MONEY_PERCENT <=", value, "moneyPercent");
            return (Criteria) this;
        }

        public Criteria andMoneyPercentIn(List<Double> values) {
            addCriterion("MONEY_PERCENT in", values, "moneyPercent");
            return (Criteria) this;
        }

        public Criteria andMoneyPercentNotIn(List<Double> values) {
            addCriterion("MONEY_PERCENT not in", values, "moneyPercent");
            return (Criteria) this;
        }

        public Criteria andMoneyPercentBetween(Double value1, Double value2) {
            addCriterion("MONEY_PERCENT between", value1, value2, "moneyPercent");
            return (Criteria) this;
        }

        public Criteria andMoneyPercentNotBetween(Double value1, Double value2) {
            addCriterion("MONEY_PERCENT not between", value1, value2, "moneyPercent");
            return (Criteria) this;
        }

        public Criteria andSelfMoneyIsNull() {
            addCriterion("SELF_MONEY is null");
            return (Criteria) this;
        }

        public Criteria andSelfMoneyIsNotNull() {
            addCriterion("SELF_MONEY is not null");
            return (Criteria) this;
        }

        public Criteria andSelfMoneyEqualTo(Double value) {
            addCriterion("SELF_MONEY =", value, "selfMoney");
            return (Criteria) this;
        }

        public Criteria andSelfMoneyNotEqualTo(Double value) {
            addCriterion("SELF_MONEY <>", value, "selfMoney");
            return (Criteria) this;
        }

        public Criteria andSelfMoneyGreaterThan(Double value) {
            addCriterion("SELF_MONEY >", value, "selfMoney");
            return (Criteria) this;
        }

        public Criteria andSelfMoneyGreaterThanOrEqualTo(Double value) {
            addCriterion("SELF_MONEY >=", value, "selfMoney");
            return (Criteria) this;
        }

        public Criteria andSelfMoneyLessThan(Double value) {
            addCriterion("SELF_MONEY <", value, "selfMoney");
            return (Criteria) this;
        }

        public Criteria andSelfMoneyLessThanOrEqualTo(Double value) {
            addCriterion("SELF_MONEY <=", value, "selfMoney");
            return (Criteria) this;
        }

        public Criteria andSelfMoneyIn(List<Double> values) {
            addCriterion("SELF_MONEY in", values, "selfMoney");
            return (Criteria) this;
        }

        public Criteria andSelfMoneyNotIn(List<Double> values) {
            addCriterion("SELF_MONEY not in", values, "selfMoney");
            return (Criteria) this;
        }

        public Criteria andSelfMoneyBetween(Double value1, Double value2) {
            addCriterion("SELF_MONEY between", value1, value2, "selfMoney");
            return (Criteria) this;
        }

        public Criteria andSelfMoneyNotBetween(Double value1, Double value2) {
            addCriterion("SELF_MONEY not between", value1, value2, "selfMoney");
            return (Criteria) this;
        }

        public Criteria andSelfPercentIsNull() {
            addCriterion("SELF_PERCENT is null");
            return (Criteria) this;
        }

        public Criteria andSelfPercentIsNotNull() {
            addCriterion("SELF_PERCENT is not null");
            return (Criteria) this;
        }

        public Criteria andSelfPercentEqualTo(Double value) {
            addCriterion("SELF_PERCENT =", value, "selfPercent");
            return (Criteria) this;
        }

        public Criteria andSelfPercentNotEqualTo(Double value) {
            addCriterion("SELF_PERCENT <>", value, "selfPercent");
            return (Criteria) this;
        }

        public Criteria andSelfPercentGreaterThan(Double value) {
            addCriterion("SELF_PERCENT >", value, "selfPercent");
            return (Criteria) this;
        }

        public Criteria andSelfPercentGreaterThanOrEqualTo(Double value) {
            addCriterion("SELF_PERCENT >=", value, "selfPercent");
            return (Criteria) this;
        }

        public Criteria andSelfPercentLessThan(Double value) {
            addCriterion("SELF_PERCENT <", value, "selfPercent");
            return (Criteria) this;
        }

        public Criteria andSelfPercentLessThanOrEqualTo(Double value) {
            addCriterion("SELF_PERCENT <=", value, "selfPercent");
            return (Criteria) this;
        }

        public Criteria andSelfPercentIn(List<Double> values) {
            addCriterion("SELF_PERCENT in", values, "selfPercent");
            return (Criteria) this;
        }

        public Criteria andSelfPercentNotIn(List<Double> values) {
            addCriterion("SELF_PERCENT not in", values, "selfPercent");
            return (Criteria) this;
        }

        public Criteria andSelfPercentBetween(Double value1, Double value2) {
            addCriterion("SELF_PERCENT between", value1, value2, "selfPercent");
            return (Criteria) this;
        }

        public Criteria andSelfPercentNotBetween(Double value1, Double value2) {
            addCriterion("SELF_PERCENT not between", value1, value2, "selfPercent");
            return (Criteria) this;
        }

        public Criteria andIdLikeInsensitive(String value) {
            addCriterion("upper(ID) like", value.toUpperCase(), "id");
            return (Criteria) this;
        }

        public Criteria andEnterpriseIdLikeInsensitive(String value) {
            addCriterion("upper(ENTERPRISE_ID) like", value.toUpperCase(), "enterpriseId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TS_ENTERPRISE_BUSINESS
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TS_ENTERPRISE_BUSINESS
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}