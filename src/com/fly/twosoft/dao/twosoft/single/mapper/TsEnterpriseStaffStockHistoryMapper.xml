<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fly.twosoft.dao.twosoft.single.mapper.TsEnterpriseStaffStockHistoryMapper" >
  <resultMap id="BaseResultMap" type="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseStaffStockHistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="HISTORY_ID" property="historyId" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="SMALLINT" />
    <result column="STOCK_NUM" property="stockNum" jdbcType="INTEGER" />
    <result column="STOCK_PERCENT" property="stockPercent" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, HISTORY_ID, TYPE, STOCK_NUM, STOCK_PERCENT
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseStaffStockHistoryExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TS_ENTERPRISE_STAFF_STOCK_HISTORY
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="mysqlSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from TS_ENTERPRISE_STAFF_STOCK_HISTORY
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from TS_ENTERPRISE_STAFF_STOCK_HISTORY
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseStaffStockHistoryExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from TS_ENTERPRISE_STAFF_STOCK_HISTORY
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseStaffStockHistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into TS_ENTERPRISE_STAFF_STOCK_HISTORY (ID, HISTORY_ID, TYPE, 
      STOCK_NUM, STOCK_PERCENT)
    values (#{id,jdbcType=VARCHAR}, #{historyId,jdbcType=VARCHAR}, #{type,jdbcType=SMALLINT}, 
      #{stockNum,jdbcType=INTEGER}, #{stockPercent,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseStaffStockHistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into TS_ENTERPRISE_STAFF_STOCK_HISTORY
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="historyId != null" >
        HISTORY_ID,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="stockNum != null" >
        STOCK_NUM,
      </if>
      <if test="stockPercent != null" >
        STOCK_PERCENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="historyId != null" >
        #{historyId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=SMALLINT},
      </if>
      <if test="stockNum != null" >
        #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="stockPercent != null" >
        #{stockPercent,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseStaffStockHistoryExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from TS_ENTERPRISE_STAFF_STOCK_HISTORY
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TS_ENTERPRISE_STAFF_STOCK_HISTORY
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.historyId != null" >
        HISTORY_ID = #{record.historyId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        TYPE = #{record.type,jdbcType=SMALLINT},
      </if>
      <if test="record.stockNum != null" >
        STOCK_NUM = #{record.stockNum,jdbcType=INTEGER},
      </if>
      <if test="record.stockPercent != null" >
        STOCK_PERCENT = #{record.stockPercent,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TS_ENTERPRISE_STAFF_STOCK_HISTORY
    set ID = #{record.id,jdbcType=VARCHAR},
      HISTORY_ID = #{record.historyId,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=SMALLINT},
      STOCK_NUM = #{record.stockNum,jdbcType=INTEGER},
      STOCK_PERCENT = #{record.stockPercent,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseStaffStockHistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TS_ENTERPRISE_STAFF_STOCK_HISTORY
    <set >
      <if test="historyId != null" >
        HISTORY_ID = #{historyId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        TYPE = #{type,jdbcType=SMALLINT},
      </if>
      <if test="stockNum != null" >
        STOCK_NUM = #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="stockPercent != null" >
        STOCK_PERCENT = #{stockPercent,jdbcType=DOUBLE},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseStaffStockHistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TS_ENTERPRISE_STAFF_STOCK_HISTORY
    set HISTORY_ID = #{historyId,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=SMALLINT},
      STOCK_NUM = #{stockNum,jdbcType=INTEGER},
      STOCK_PERCENT = #{stockPercent,jdbcType=DOUBLE}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="mysqlSuffix" >
    <if test=" pageParam != null and pageParam.recordStart >= 0 and pageParam.pageSize > 0" >
      <![CDATA[ limit #{pageParam.recordStart},#{pageParam.pageSize} ]]>
    </if>
  </sql>
  <sql id="customVar_enterpriseStaffStockHistory" >
    y
  </sql>
  <sql id="customMysqlSuffix_enterpriseStaffStockHistory" >
    <if test="enterpriseStaffStockHistory != null and enterpriseStaffStockHistory.pageParam != null and enterpriseStaffStockHistory.pageParam.recordStart >= 0 and enterpriseStaffStockHistory.pageParam.pageSize > 0" >
      <![CDATA[ limit #{enterpriseStaffStockHistory.pageParam.recordStart},#{enterpriseStaffStockHistory.pageParam.pageSize} ]]>
    </if>
  </sql>
  <resultMap id="customResultMap_enterpriseStaffStockHistory" type="com.fly.twosoft.dao.twosoft.single.model.TsEnterpriseStaffStockHistory" >
    <result column="y_ID" jdbcType="VARCHAR" property="id" />
    <result column="y_HISTORY_ID" jdbcType="VARCHAR" property="historyId" />
    <result column="y_TYPE" jdbcType="SMALLINT" property="type" />
    <result column="y_STOCK_NUM" jdbcType="INTEGER" property="stockNum" />
    <result column="y_STOCK_PERCENT" jdbcType="DOUBLE" property="stockPercent" />
  </resultMap>
  <sql id="customColumns_enterpriseStaffStockHistory" >
    y.ID y_ID, y.HISTORY_ID y_HISTORY_ID, y.TYPE y_TYPE, y.STOCK_NUM y_STOCK_NUM, y.STOCK_PERCENT y_STOCK_PERCENT
  </sql>
  <sql id="customColumnVars_enterpriseStaffStockHistory" >
    y.ID, y.HISTORY_ID, y.TYPE, y.STOCK_NUM, y.STOCK_PERCENT
  </sql>
  <sql id="customExampleWhere_enterpriseStaffStockHistory" >
    <if test="enterpriseStaffStockHistory != null &amp;&amp; enterpriseStaffStockHistory.oredCriteria.size() &gt; 0" >
      and
      <trim prefixOverrides="or" >
        <foreach collection="enterpriseStaffStockHistory.oredCriteria" item="criteria" separator="or" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <choose >
              <when test="criteria.valid" >
                <foreach collection="criteria.criteria" item="criterion" >
                  <choose >
                    <when test="criterion.noValue" >
                      and y.${criterion.condition}
                    </when>
                    <when test="criterion.singleValue" >
                      and y.${criterion.condition} #{criterion.value}
                    </when>
                    <when test="criterion.betweenValue" >
                      and y.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                    </when>
                    <when test="criterion.listValue" >
                      and y.${criterion.condition}
                      <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                        #{listItem}
                      </foreach>
                    </when>
                  </choose>
                </foreach>
              </when>
              <otherwise >
                and 1 = 1
              </otherwise>
            </choose>
          </trim>
        </foreach>
      </trim>
    </if>
  </sql>
  <sql id="customOrderBy_enterpriseStaffStockHistory" >
    <if test="enterpriseStaffStockHistory != null and enterpriseStaffStockHistory.orderByClause != null" >
      order by ${enterpriseStaffStockHistory.orderByClause}
    </if>
  </sql>
</mapper>